# Generated by Django 4.1.5 on 2023-05-05 03:57

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number_of_courses", models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("link", models.TextField(null=True)),
                (
                    "background_image",
                    models.ImageField(
                        blank="", default="", null=True, upload_to="background/"
                    ),
                ),
                ("institution", models.CharField(max_length=100)),
                ("requirements", models.BooleanField(default=False)),
                (
                    "number_of_stars",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, null=True
                    ),
                ),
                ("start_of_course", models.DateField(null=True)),
                ("end_of_course", models.DateField(null=True)),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("country", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("registration_date", models.DateField(null=True)),
                ("language", models.CharField(max_length=100)),
                ("number_of_teachers", models.IntegerField(null=True)),
                ("accept_installments", models.BooleanField(default=False)),
                (
                    "category",
                    models.ManyToManyField(
                        related_name="category", to="westudy.category"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Modality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="TypeOfProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number_of_courses", models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="University",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("password", models.CharField(max_length=128)),
                ("name", models.CharField(max_length=100)),
                (
                    "activation_code",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "background_image",
                    models.ImageField(
                        blank="", default="", null=True, upload_to="background/"
                    ),
                ),
                ("verified", models.BooleanField(default=False, null=True)),
                ("global_ranking", models.IntegerField(null=True)),
                ("national_level_ranking", models.IntegerField(null=True)),
                ("latin_american_ranking", models.IntegerField(null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("number_of_courses", models.IntegerField(default=0)),
                ("country", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                (
                    "logo",
                    models.ImageField(
                        blank="", default="", null=True, upload_to="logo/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Shifts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_university", models.IntegerField(default=0)),
                ("shift", models.CharField(max_length=100, null=True)),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="westudy.course",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="modality",
            field=models.ManyToManyField(
                related_name="modality", to="westudy.modality"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="type_of_program",
            field=models.ManyToManyField(
                related_name="type_of_program", to="westudy.typeofprogram"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="university",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="westudy.university",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "profile",
                    models.ImageField(
                        blank="", default="", null=True, upload_to="profile/"
                    ),
                ),
                ("names", models.CharField(max_length=100)),
                ("surnames", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("nationality", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "program_preferences",
                    models.ManyToManyField(
                        related_name="program_preferences", to="westudy.typeofprogram"
                    ),
                ),
                (
                    "saved_courses",
                    models.ManyToManyField(
                        related_name="saved_courses", to="westudy.course"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
